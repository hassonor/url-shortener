services:
  shortener:
    build: ../../services/shortener
    container_name: shortener
    ports:
      - "8080:8080"
    environment:
      # These can be hardcoded or come from a .env file
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shortener
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/shortener"
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - my_network

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - my_network

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - my_network

  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    container_name: redis-commander
    restart: always
    environment:
      REDIS_HOSTS: "local:redis:6379"
    ports:
      - "8081:8081"
    user: "root"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - my_network

volumes:
  pgdata:
  redisdata:
  pgadmin_data:

networks:
  my_network:
