version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "21810:2181"
    networks:
      - my_network

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    networks:
      - my_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    ports:
      - "8085:8080"
    depends_on:
      - kafka
    networks:
      - my_network

  shortener:
    build: shortener
    ports:
      - "8001:8001"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "shortener"
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/shortener"
      REDIS_URL: "redis://redis:6379/0"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      BASE_URL: "http://localhost:8001"
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - my_network

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "shortener"
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shortener -h postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - my_network

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - my_network

  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: "local:redis:6379"
    ports:
      - "8081:8081"
    user: "root"
    depends_on:
      - redis
    networks:
      - my_network

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    depends_on:
      - kafka
    environment:
      KAFKA_SERVER: "kafka:9092"
    ports:
      - "9308:9308"
    networks:
      - my_network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - shortener
      - kafka-exporter
    networks:
      - my_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - my_network

volumes:
  pgdata:
  redisdata:
  pgadmin_data:

networks:
  my_network:
